name: Deploy to Azure

on:
  push:
    branches:
      - main
    paths:
      - 'app/**' # Trigger only for changes in the `app` directory
      - 'k8s/**' # Trigger only for changes in the `k8s` directory
      - '.github/workflows/deploy-image.yml'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v2
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      env:
        IMAGE_TAG: latest
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/flask-app:$IMAGE_TAG ./app 
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/flask-app:$IMAGE_TAG
    outputs:
        image_tag: ${{ steps.build.outputs.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Get AKS Credentials
      run: |
         az aks get-credentials --resource-group ${{ vars.RESOURCE_GROUP }} --name ${{ vars.CLUSTER_NAME }}

    - name: Deploy to AKS
      # env:
      #   image_name: ${{ vars.ACR_LOGIN_SERVER }}/flask-app:${{ needs.build.outputs.image_tag }}
      # run: |
      #   sed "s|\${image_name}|${{ env.image_name }}|" ./k8s/deployment.yaml | kubectl apply -f -
      # run: |
      #   kubectl apply -f ./k8s/deployment.yaml image_name=${{ vars.ACR_LOGIN_SERVER }}/flask-app:latest
      # run: kubectl apply -f ./k8s/deployment.yaml # Apply the template WITH the placeholder
       
      run: |
       sed "s|image_placeholder|${{ secrets.ACR_LOGIN_SERVER }}/flask-app:latest|" ./k8s/deployment.yaml | kubectl apply -f -

    # - name: Set Image with kubectl
    #   run: kubectl set image deployment/flask-app flask-app="${{ vars.ACR_LOGIN_SERVER }}/flask-app:${{ needs.build.outputs.image_tag }}"
